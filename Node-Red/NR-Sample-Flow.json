[{"id":"6d1d4321.92e2bc","type":"serial-port","serialport":"/dev/ttyAMA0","serialbaud":"9600","databits":"8","parity":"none","stopbits":"1","newline":"1","bin":"false","out":"count","addchar":false},{"id":"1c304714.e3cfb9","type":"serial in","name":"","serial":"6d1d4321.92e2bc","x":154,"y":344,"z":"79349378.86cb6c","wires":[["5045a40f.afba5c","f6579862.09a868"]]},{"id":"5045a40f.afba5c","type":"function","name":"Msg Parse","func":"\n// name: Parse message, identify type a or b. Output a on 1, b on 2\n// outputs: 2\n// anything stored in context is kept available for next time we get called\ncontext.buff = context.buff || \"\";\ncontext.count = context.count || 0;\ncontext.maxCount = context.maxCount || 0;\ncontext.msgType = context.msgType || \"\";\ncontext.buf = context.buf || new Buffer(32);\n\n// wait for an a and reset the buffer and counter\nif( context.msgType == \"\" ) {\n\t// Start of message, get a or b\n\tif (context.maxCount == 0) {\n\t\tif( msg.payload == 'a') {\n\t\t\tcontext.count = 0;\n\t\t\tcontext.maxCount = 12;\n\t\t\tcontext.buff = \"\";\n\t\t\tcontext.msgType = \"a\";\n\t\t} else if( msg.payload == 'b') {\n\t\t\tcontext.count = 1;\n\t\t\tcontext.maxCount = 18;\n\t\t\tcontext.buff = \"\"; \n\t\t\tcontext.msgType = \"b\";\n\t\t}\n\t}\n}\n\n// Next part depends on msgType\nif( context.msgType == \"a\" ) {\n\t// Deal with LLAP format message\n\tcontext.buff = context.buff + msg.payload;\n\tcontext.count += 1;\n\tif (context.count == context.maxCount) { \n\t    msg.topic = context.buff.slice(1,3);\t// return the first two chars as the topic\n\t    msg.payload = context.buff.slice(3);\t// return rest of the buffer as the payload\n\t\tcontext.count = 0;\n\t\tcontext.maxCount = 0;\n\t\tcontext.msgType = \"\";\n    \treturn [msg,null];\n\t}\n\treturn [null,null];\n} else if( context.msgType == \"b\" ) { \n\t// Deal with LLAP format message\n\tcontext.buff = context.buff + msg.payload;\n\tcontext.count += 1;\n\tif (context.count == context.maxCount) { \n\t    msg.topic = context.buff.slice(1,9);\t// return the first 8 chars as the topic\n\t    msg.payload = context.buff.slice(9);\t// return rest of the buffer as the payload\n\t\tcontext.count = 0;\n\t\tcontext.maxCount = 0;\n\t\tcontext.msgType = \"\";\n    \treturn [null,msg];\n\t}\n\treturn [null,null];\n}\nreturn [null,null];\n\n","outputs":"2","valid":true,"x":369,"y":317,"z":"79349378.86cb6c","wires":[["6367e23f.9c981c"],["beba1fd2.4145e"]]},{"id":"6367e23f.9c981c","type":"debug","name":"LLAP Message","active":true,"console":"false","complete":"payload","x":613,"y":292,"z":"79349378.86cb6c","wires":[]},{"id":"f6579862.09a868","type":"debug","name":"","active":false,"console":"false","complete":"false","x":373,"y":380,"z":"79349378.86cb6c","wires":[]},{"id":"beba1fd2.4145e","type":"debug","name":"OXFP Message","active":true,"console":"false","complete":"payload","x":616,"y":352,"z":"79349378.86cb6c","wires":[]}]
